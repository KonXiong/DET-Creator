/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("X")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CP1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CP2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("con")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

TRANSITION_LIST("CP")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("Done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 164.04;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 156.438;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 436.438;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 156.438;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 72.398;
	}
}

TRANSITION_LIST("Start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 440.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 380.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("X")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 25;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("CP1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.771;
		NODE
		{
			REPEAT = 98;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 4.229;
	}
}

TRANSITION_LIST("CP2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 28.234;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 4.276;
			NODE
			{
				REPEAT = 3;
				LEVEL 0 FOR 5.0;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 5.0;
				LEVEL 1 FOR 25.0;
			}
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 25.724;
		}
		LEVEL 1 FOR 4.276;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.724;
		LEVEL 1 FOR 4.276;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 25.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.724;
		LEVEL 1 FOR 4.276;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 2.49;
	}
}

TRANSITION_LIST("con")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 163.683;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 156.438;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 436.438;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 156.438;
		LEVEL 1 FOR 3.562;
		LEVEL 0 FOR 72.755;
	}
}

TRANSITION_LIST("Y[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 319.236;
		LEVEL 1 FOR 7.226;
		LEVEL 0 FOR 592.774;
		LEVEL 1 FOR 7.226;
		LEVEL 0 FOR 73.538;
	}
}

TRANSITION_LIST("Y[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.237;
		LEVEL 1 FOR 77.226;
		LEVEL 0 FOR 72.774;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 54.216;
		LEVEL 0 FOR 235.784;
		LEVEL 1 FOR 77.226;
		LEVEL 0 FOR 72.774;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.763;
	}
}

TRANSITION_LIST("Y[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.225;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 37.226;
		LEVEL 0 FOR 32.774;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 14.216;
		LEVEL 0 FOR 195.784;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 37.226;
		LEVEL 0 FOR 32.774;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 40.0;
		}
		LEVEL 1 FOR 34.216;
		LEVEL 0 FOR 6.559;
	}
}

TRANSITION_LIST("Y[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 39.623;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 7.226;
		LEVEL 0 FOR 23.498;
		LEVEL 1 FOR 9.276;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.724;
		LEVEL 1 FOR 9.276;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 4.216;
		LEVEL 0 FOR 185.784;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 7.226;
		LEVEL 0 FOR 23.498;
		LEVEL 1 FOR 9.276;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.724;
		LEVEL 1 FOR 9.276;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 24.216;
		LEVEL 0 FOR 6.161;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "X";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CP1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CP2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "con";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Y";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "Y[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "Y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "Y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "Y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
