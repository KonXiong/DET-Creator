/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CP0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Start")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Y")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Y[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("Y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Y";
}

SIGNAL("CP1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("state")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("state[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("state[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "state";
}

SIGNAL("num[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("num[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("num[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("num[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("num")
{
	MEMBERS = "num[3]", "num[2]", "num[1]", "num[0]";
}

TRANSITION_LIST("CP0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 499;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("Done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1651.582;
		LEVEL 1 FOR 99.888;
		LEVEL 0 FOR 2700.112;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 99.888;
			LEVEL 0 FOR 3900.112;
		}
		LEVEL 1 FOR 99.888;
		LEVEL 0 FOR 3448.53;
	}
}

TRANSITION_LIST("Start")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 800.0;
			LEVEL 1 FOR 3200.0;
		}
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 1200.0;
	}
}

TRANSITION_LIST("Y[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1549.593;
		LEVEL 1 FOR 107.315;
		LEVEL 0 FOR 2692.685;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 107.055;
			LEVEL 0 FOR 3892.945;
		}
		LEVEL 1 FOR 107.055;
		LEVEL 0 FOR 3543.352;
	}
}

TRANSITION_LIST("Y[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 749.562;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 2000.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 667.905;
			LEVEL 0 FOR 1532.095;
		}
		LEVEL 1 FOR 450.438;
	}
}

TRANSITION_LIST("Y[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 349.376;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1600.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 600.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 267.905;
			LEVEL 0 FOR 1132.095;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 50.624;
	}
}

TRANSITION_LIST("Y[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 149.523;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 400.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 67.905;
			LEVEL 0 FOR 932.095;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 200.0;
				LEVEL 0 FOR 200.0;
			}
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 400.0;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 200.0;
				LEVEL 0 FOR 200.0;
			}
		}
		LEVEL 1 FOR 67.905;
		LEVEL 0 FOR 932.095;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.477;
	}
}

TRANSITION_LIST("CP1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 500;
			LEVEL 0 FOR 140.0;
			LEVEL 1 FOR 60.0;
		}
	}
}

TRANSITION_LIST("state[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("state[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 51.95;
		LEVEL 1 FOR 1600.0;
		LEVEL 0 FOR 99.888;
		LEVEL 1 FOR 260.962;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 839.15;
			LEVEL 1 FOR 1600.0;
			LEVEL 0 FOR 99.888;
			LEVEL 1 FOR 1460.962;
		}
		LEVEL 0 FOR 839.15;
		LEVEL 1 FOR 1148.05;
	}
}

TRANSITION_LIST("num[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 851.791;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 2000.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 800.0;
			LEVEL 0 FOR 899.888;
			LEVEL 1 FOR 664.254;
			LEVEL 0 FOR 1635.858;
		}
		LEVEL 1 FOR 348.209;
	}
}

TRANSITION_LIST("num[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 453.341;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 1600.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 499.888;
			LEVEL 1 FOR 400.0;
			LEVEL 0 FOR 400.0;
			LEVEL 1 FOR 264.254;
			LEVEL 0 FOR 1235.858;
		}
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 346.659;
	}
}

TRANSITION_LIST("num[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 252.092;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 299.888;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 64.254;
			LEVEL 0 FOR 1035.858;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 200.0;
				LEVEL 0 FOR 200.0;
			}
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 299.888;
			NODE
			{
				REPEAT = 3;
				LEVEL 1 FOR 200.0;
				LEVEL 0 FOR 200.0;
			}
		}
		LEVEL 1 FOR 64.254;
		LEVEL 0 FOR 1035.858;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 200.0;
			LEVEL 0 FOR 200.0;
		}
		LEVEL 1 FOR 147.908;
	}
}

TRANSITION_LIST("num[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 151.771;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 100.112;
			LEVEL 0 FOR 99.888;
		}
		LEVEL 1 FOR 100.112;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 99.888;
			LEVEL 0 FOR 1000.0;
			NODE
			{
				REPEAT = 7;
				LEVEL 1 FOR 100.112;
				LEVEL 0 FOR 99.888;
			}
			LEVEL 1 FOR 100.112;
			LEVEL 0 FOR 200.0;
			NODE
			{
				REPEAT = 6;
				LEVEL 1 FOR 99.888;
				LEVEL 0 FOR 100.112;
			}
		}
		LEVEL 1 FOR 99.888;
		LEVEL 0 FOR 1000.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 100.112;
			LEVEL 0 FOR 99.888;
		}
		LEVEL 1 FOR 48.229;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CP0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CP1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Start";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Y";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "Y[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "Y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "state";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "state[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "state[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "num";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16;
}

DISPLAY_LINE
{
	CHANNEL = "num[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "num[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "num[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "num[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
