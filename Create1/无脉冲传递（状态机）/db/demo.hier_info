|demo
Done <= control:inst.Done
Start => control:inst.Start
CP1 => inst6.IN0
CP1 => count:inst2.CP
CP0 => inst6.IN1
num[0] <= count:inst1.num[0]
num[1] <= count:inst1.num[1]
num[2] <= count:inst1.num[2]
num[3] <= count:inst1.num[3]
state[0] <= control:inst.state[0]
state[1] <= control:inst.state[1]
Y[0] <= count:inst2.num[0]
Y[1] <= count:inst2.num[1]
Y[2] <= count:inst2.num[2]
Y[3] <= count:inst2.num[3]


|demo|control:inst
Start => state[1]~reg0.ACLR
Start => state[0]~reg0.ACLR
Start => rst~reg0.PRESET
Start => Done~reg0.ENA
num[0] => Equal1.IN0
num[1] => Equal1.IN1
num[2] => Equal1.IN2
num[3] => Equal1.IN3
Done <= Done~reg0.DB_MAX_OUTPUT_PORT_TYPE
rst <= rst~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[0] <= state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
CP => state[1]~reg0.CLK
CP => state[0]~reg0.CLK
CP => rst~reg0.CLK
CP => Done~reg0.CLK


|demo|count:inst1
CP => num[3]~reg0.CLK
CP => num[2]~reg0.CLK
CP => num[1]~reg0.CLK
CP => num[0]~reg0.CLK
rst => num[3]~reg0.ACLR
rst => num[2]~reg0.ACLR
rst => num[1]~reg0.ACLR
rst => num[0]~reg0.ACLR
num[0] <= num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[1] <= num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[2] <= num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[3] <= num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|demo|count:inst2
CP => num[3]~reg0.CLK
CP => num[2]~reg0.CLK
CP => num[1]~reg0.CLK
CP => num[0]~reg0.CLK
rst => num[3]~reg0.ACLR
rst => num[2]~reg0.ACLR
rst => num[1]~reg0.ACLR
rst => num[0]~reg0.ACLR
num[0] <= num[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[1] <= num[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[2] <= num[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
num[3] <= num[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


