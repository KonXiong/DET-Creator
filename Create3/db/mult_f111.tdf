--lpm_mult CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEDICATED_MULTIPLIER_CIRCUITRY="AUTO" DEVICE_FAMILY="Cyclone II" DSP_BLOCK_BALANCING="Auto" INPUT_A_IS_CONSTANT="NO" INPUT_B_IS_CONSTANT="YES" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=31 LPM_WIDTHB=7 LPM_WIDTHP=38 LPM_WIDTHS=1 MAXIMIZE_SPEED=5 dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 9.0SP2 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2009:05:07:10:25:28:SJ cbx_lpm_mult 2008:09:30:18:36:56:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_padd 2008:09:04:11:11:31:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION cycloneii_mac_mult (aclr, clk, dataa[dataa_width-1..0], datab[datab_width-1..0], ena, signa, signb)
WITH ( dataa_clock, dataa_width, datab_clock, datab_width, signa_clock, signb_clock)
RETURNS ( dataout[dataa_width+datab_width-1..0]);
FUNCTION cycloneii_mac_out (aclr, clk, dataa[dataa_width-1..0], ena)
WITH ( dataa_width = 0, output_clock)
RETURNS ( dataout[dataa_width-1..0]);
FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = dsp_9bit 4 lut 21 
SUBDESIGN mult_f111
( 
	dataa[30..0]	:	input;
	datab[6..0]	:	input;
	result[37..0]	:	output;
) 
VARIABLE
	add5_result[20..0]	:	WIRE;
	mac_mult1 : cycloneii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 7,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult3 : cycloneii_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 13,
			datab_clock = "none",
			datab_width = 7,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_out2 : cycloneii_mac_out
		WITH (
			dataa_width = 25,
			output_clock = "none"
		);
	mac_out4 : cycloneii_mac_out
		WITH (
			dataa_width = 20,
			output_clock = "none"
		);
	sft6a[20..0] : soft;
	sft7a[20..0] : soft;
	sft8a[20..0] : soft;
	w100w	: WIRE;
	w182w[38..0]	: WIRE;

BEGIN 
	add5_result[] = sft6a[].out + sft7a[].out;
	mac_mult1.dataa[] = ( dataa[17..0]);
	mac_mult1.datab[] = ( datab[6..0]);
	mac_mult1.signa = B"0";
	mac_mult1.signb = B"0";
	mac_mult3.dataa[] = ( dataa[30..18]);
	mac_mult3.datab[] = ( datab[6..0]);
	mac_mult3.signa = B"0";
	mac_mult3.signb = B"0";
	mac_out2.dataa[] = mac_mult1.dataout[];
	mac_out4.dataa[] = mac_mult3.dataout[];
	sft6a[].in = ( w100w, ( mac_out4.dataout[19..19], ( mac_out4.dataout[18..18], ( mac_out4.dataout[17..17], ( mac_out4.dataout[16..16], ( mac_out4.dataout[15..15], ( mac_out4.dataout[14..14], ( mac_out4.dataout[13..13], ( mac_out4.dataout[12..12], ( mac_out4.dataout[11..11], ( mac_out4.dataout[10..10], ( mac_out4.dataout[9..9], ( mac_out4.dataout[8..8], ( mac_out4.dataout[7..7], ( mac_out2.dataout[24..24], ( mac_out2.dataout[23..23], ( mac_out2.dataout[22..22], ( mac_out2.dataout[21..21], ( mac_out2.dataout[20..20], ( mac_out2.dataout[19..18]))))))))))))))))))));
	sft7a[].in = ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( w100w, ( mac_out4.dataout[6..6], ( mac_out4.dataout[5..5], ( mac_out4.dataout[4..4], ( mac_out4.dataout[3..3], ( mac_out4.dataout[2..2], ( mac_out4.dataout[1..0]))))))))))))))))))));
	sft8a[].in = add5_result[];
	result[37..0] = w182w[37..0];
	w100w = B"0";
	w182w[] = ( sft8a[20..19].out, sft8a[18..17].out, sft8a[16..15].out, sft8a[14..13].out, sft8a[12..11].out, sft8a[10..9].out, sft8a[8..7].out, sft8a[6..5].out, sft8a[4..3].out, sft8a[2..1].out, sft8a[0..0].out, mac_out2.dataout[17..17], mac_out2.dataout[16..16], mac_out2.dataout[15..15], mac_out2.dataout[14..14], mac_out2.dataout[13..13], mac_out2.dataout[12..12], mac_out2.dataout[11..11], mac_out2.dataout[10..10], mac_out2.dataout[9..9], mac_out2.dataout[8..8], mac_out2.dataout[7..7], mac_out2.dataout[6..6], mac_out2.dataout[5..5], mac_out2.dataout[4..4], mac_out2.dataout[3..3], mac_out2.dataout[2..2], mac_out2.dataout[1..1], mac_out2.dataout[0..0]);
END;
--VALID FILE
